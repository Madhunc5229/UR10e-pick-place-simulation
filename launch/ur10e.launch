<?xml version="1.0" encoding="utf-8"?>
<launch>
    <!-- including the empty launch file -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" />

    <!-- Importing the robot urdf file -->
    <param name="robot_description" command="cat '$(find ur10e)/urdf/ur10e.urdf'" />

    <!-- Spawning the model in gazebo -->
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args=" -param robot_description -urdf -model ur10e" output="screen" />

    <!-- Including the yaml file -->
    <rosparam file="$(find ur10e)/config/joint_names_ur10e.yaml" command="load" />

    <!-- Set the joint_state input false from gui -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="False" />
    </node>

    <!-- Defining co-ordinates between world and base link -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_base" args="0 0 0 0 0 0 1 /map /chassis 10" />
    

    <!-- loading the controllers using control spawner -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/ur10e" args="joint_state_controller 
    motor_1_revolute_controller motor_2_revolute_controller motor_3_revolute_controller motor_4_revolute_controller motor_5_revolute_controller motor_6_revolute_controller"/>

    <!-- Publishing the robot status to ros pkgs -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

    <!-- Default node for rostopic -->
    <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" />

</launch>